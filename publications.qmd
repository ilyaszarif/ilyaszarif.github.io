---
title: "Publications"
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r, results='asis', echo=FALSE, message=FALSE, warning=FALSE}
library(htmltools)
library(dplyr)
library(readr)
library(stringr)

# Load and filter data
pub.data <- read_csv("data/academic_dataset.csv") %>%
  filter(status == "Published")

years <- sort(unique(pub.data$year), decreasing = TRUE)

for (k in years) {
  cat(as.character(tags$h2(k)))
  
  pub.year <- pub.data %>% filter(year == k)
  
  for (type in unique(pub.year$type_of_publication)) {
    cat(as.character(tags$h4(type)))
    
    pub.type <- pub.year %>% filter(type_of_publication == type)
    
    for (i in 1:nrow(pub.type)) {
      # Split authors and trim whitespace
      parts <- str_split(pub.type$authors[i], ",")[[1]] %>% str_trim()

      # Recombine into name pairs: "Lastname, Initial"
      full_authors <- c()
      for (j in seq(1, length(parts), by = 2)) {
        if (j + 1 <= length(parts)) {
          full_authors <- c(full_authors, paste0(parts[j], ", ", parts[j + 1]))
        } else {
          full_authors <- c(full_authors, parts[j])  # catch odd number edge case
        }
      }

      # Bold "Ilyas, M." only
      formatted_authors <- lapply(full_authors, function(author) {
        if (author == "Ilyas, M.") {
          as.character(tags$strong(author))
        } else {
          author
        }
      })

      author_line <- HTML(paste(formatted_authors, collapse = ", "))

      pub_entry <- tagList(
        tags$p(
          author_line,
          paste0(" (", pub.type$year[i], ") "),
          tags$b(pub.type$title[i]),
          ". ",
          tags$i(pub.type$item_info[i]),
          if (!is.na(pub.type$url_text[i]) && pub.type$url_text[i] != "") {
            tagList(" ", tags$a(href = pub.type$url_text[i], pub.type$url_text[i]))
          }
        )
      )
      
      cat(as.character(pub_entry))
    }
  }
}
```
